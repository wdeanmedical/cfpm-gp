<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context
       classpath:spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

  <bean id="practice" class="org.springframework.web.context.support.ServletContextParameterFactoryBean">
  <property name="initParamName" value="practice" />
</bean>

  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location">
      <value>/WEB-INF/properties/practice/${practice}/${practice}_spring-servlet.properties</value>
    </property>
  </bean>
  
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
  
     <property name="driverClass">
       <value>${global.jdbc.driver_class}</value>
     </property>
     <property name="jdbcUrl">
       <value>${global.jdbc.url}</value>
     </property>
     <property name="user">
       <value>${global.jdbc.username}</value>
     </property>
     <property name="password">
       <value>${global.jdbc.password}</value>
     </property>

        <property name="initialPoolSize">
            <value>5</value>
        </property>
        <property name="minPoolSize">
            <value>5</value>
        </property>
        <property name="maxPoolSize">
            <value>100</value>
        </property>
        <!-- <property name="timeout"><value>0</value></property> -->   <!-- 0 means: no timeout -->
        <property name="idleConnectionTestPeriod">
            <value>200</value>
        </property>
        <property name="acquireIncrement">
            <value>5</value>
        </property>
        <property name="acquireRetryAttempts">
            <value>10</value>
        </property>
        <property name="acquireRetryDelay">
            <value>1000</value>
        </property>
        <property name="unreturnedConnectionTimeout">
            <value>200</value>
        </property>
        <!-- unreturnedConnectionTimeout defines a limit (in seconds) to how long 
            a Connection may remain checked out. -->
        <!-- If set to a nozero value, unreturned, -->
        <!-- checked-out Connections that exceed this limit will be summarily destroyed, 
            and then replaced in the pool -->
        <property name="debugUnreturnedConnectionStackTraces">
            <value>true</value>
        </property>

        <property name="maxStatements">
            <value>0</value>
        </property>  <!-- 0 means: statement caching is turned off. -->
        <property name="numHelperThreads">
            <value>3</value>
        </property>  <!-- 3 is default -->
    </bean>

    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="baseDAO" class="com.wdeanmedical.persistence.BaseDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <bean id="appDAO" class="com.wdeanmedical.persistence.AppDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <bean id="patientFileDAO" class="com.wdeanmedical.persistence.PatientFileDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="adminDAO" class="com.wdeanmedical.persistence.AdminDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="calendarDAO" class="com.wdeanmedical.persistence.CalendarDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="externalDAO" class="com.wdeanmedical.persistence.ExternalDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="messageDAO" class="com.wdeanmedical.persistence.MessageDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="patientDAO" class="com.wdeanmedical.persistence.PatientDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    
    <bean id="leadMgmtDAO" class="com.wdeanmedical.persistence.LeadMgmtDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    
    <bean id="reportDAO" class="com.wdeanmedical.persistence.ReportDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
    <bean id="siteDAO" class="com.wdeanmedical.persistence.SiteDAO">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- enable the configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
      <bean id="baseDAOTx"
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
        <property name="target">
            <ref bean="baseDAO" />
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="appDAOTx"
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
        <property name="target">
            <ref bean="appDAO" />
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="adminDAOTx"
      class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager">
        <ref bean="transactionManager" />
      </property>
      <property name="target">
        <ref bean="adminDAO" />
      </property>
      <property name="transactionAttributes">
          <props>
            <prop key="create*">PROPAGATION_REQUIRED</prop>
            <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
      </property>
  </bean>
  
    <bean id="calendarDAOTx"
      class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager">
        <ref bean="transactionManager" />
      </property>
      <property name="target">
        <ref bean="calendarDAO" />
      </property>
      <property name="transactionAttributes">
          <props>
            <prop key="create*">PROPAGATION_REQUIRED</prop>
            <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
      </property>
  </bean>
  
    <bean id="messageDAOTx"
      class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager">
        <ref bean="transactionManager" />
      </property>
      <property name="target">
        <ref bean="messageDAO" />
      </property>
      <property name="transactionAttributes">
          <props>
            <prop key="create*">PROPAGATION_REQUIRED</prop>
            <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
      </property>
  </bean>
  
  <bean id="patientDAOTx"
      class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager">
        <ref bean="transactionManager" />
      </property>
      <property name="target">
        <ref bean="patientDAO" />
      </property>
      <property name="transactionAttributes">
          <props>
            <prop key="create*">PROPAGATION_REQUIRED</prop>
            <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
      </property>
  </bean>

   <bean id="patientFileDAOTx"
      class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager">
        <ref bean="transactionManager" />
      </property>
      <property name="target">
        <ref bean="patientFileDAO" />
      </property>
      <property name="transactionAttributes">
          <props>
            <prop key="create*">PROPAGATION_REQUIRED</prop>
            <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
      </property>
  </bean>
  
      <bean id="externalDAOTx"
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
            <ref bean="transactionManager" />
        </property>
        <property name="target">
            <ref bean="externalDAO" />
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="create*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
  
    <bean id="leadMgmtDAOTx"
      class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager">
        <ref bean="transactionManager" />
      </property>
      <property name="target">
        <ref bean="leadMgmtDAO" />
      </property>
      <property name="transactionAttributes">
          <props>
            <prop key="create*">PROPAGATION_REQUIRED</prop>
            <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
      </property>
  </bean>
  
  
  <bean id="siteDAOTx"
      class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
      <property name="transactionManager">
        <ref bean="transactionManager" />
      </property>
      <property name="target">
        <ref bean="siteDAO" />
      </property>
      <property name="transactionAttributes">
          <props>
            <prop key="create*">PROPAGATION_REQUIRED</prop>
            <prop key="*">PROPAGATION_REQUIRED</prop>
          </props>
      </property>
  </bean>
    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref local="dataSource" />
        </property>
        <property name="packagesToScan">  
          <list>
              <value>com.wdeanmedical.entity</value>
              <value>com.wdeanmedical.${app.specialty}.entity</value>
          </list>
        </property>
        <property name="hibernateProperties">
          <props>
            <prop key="hibernate.dialect">${global.jdbc.dialect}</prop>
            <prop key="hibernate.show_sql">${global.jdbc.show_sql}</prop>
            <prop key="hibernate.hbm2ddl.auto">${global.jdbc.hbm2ddl.auto}</prop>
          </props>
        </property>
    </bean>

</beans>

